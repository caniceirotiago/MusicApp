Index: src/GUIClassesSwing/GUIManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package src.GUIClassesSwing;\n\nimport src.RockStar.RockstarIncManager;\nimport src.RockStar.User;\n\nimport javax.swing.*;\nimport java.io.Serializable;\n\npublic class GUIManager implements Serializable { //O Serializable não deveria ficar aqui\n\n    private ClientGUI clientFrame;\n    private LoginRegistrationGUI loginRegistrationGUI;\n    private LogRegFrame loginFrame;\n    private LogRegFrame registrationFrame;\n    private RockstarIncManager logicManager;\n    private User currentUser;\n\n    public GUIManager(RockstarIncManager logicManager) {\n        this.logicManager = logicManager;\n    }\n    public void run(){\n        loginRegistrationGUI = new LoginRegistrationGUI(GUIManager.this);\n    }\n    //Passa a lógica da tentativa de login para a classe lógica\n    public void loginAttempt(String userField, String passToString, boolean isMCreator, String pin){\n        logicManager.loginAttempt(userField,passToString,isMCreator,pin);\n    }\n    //Inicia a frame correta no caso de o login ser bem sucedido\n    public void sucessfullLogin(User currentUser, boolean isMCreator){\n        this.currentUser = currentUser;\n        if(isMCreator){\n            SwingUtilities.invokeLater(() -> {\n                new MusicCreatorGUI(currentUser);\n                loginRegistrationGUI.setVisible(false);\n                loginFrame.dispose();\n                if(registrationFrame != null) registrationFrame.dispose();\n            });\n        } else {\n            SwingUtilities.invokeLater(() -> {\n                new ClientGUI(currentUser);\n                loginRegistrationGUI.setVisible(false);\n                loginFrame.dispose();\n                if(registrationFrame != null) registrationFrame.dispose();\n            });\n        }\n    }\n    //Caixa de diálogo em caso de login sem sucesso\n    public void unsuccessfulLogin(){\n        JOptionPane.showMessageDialog(null,\"Unsuccessful Login\");\n    };\n    public void newUserAttempt(String name,String usernameField,String password,String email,boolean isMCreator, String pin){\n        logicManager.newUserAttempt(name, usernameField,password,email, isMCreator, pin);\n    }\n    public void successfulRegistration(){\n        JOptionPane.showMessageDialog(null,\"New User Created\");\n    }\n    public void unsuccessfulRegistration(int cod){\n        switch (cod){\n            case 1 : JOptionPane.showMessageDialog(null,\"Unsuccessful Registration - The email already exists\");\n                break;\n            case 2 : JOptionPane.showMessageDialog(null,\"Unsuccessful Registration - The username already exists\");\n                break;\n                //switches de validacao\n            case 3: JOptionPane.showMessageDialog(null,\"That email is not valid\");\n                break;\n            case 4: JOptionPane.showMessageDialog(null, \"The username does not have the size requirements (MIN:3 MAX 10)\");\n            break;\n            case 5: JOptionPane.showMessageDialog(null, \"The pin is not valid (MIN:4 MAX:8)\");\n            break;\n        }\n\n    }\n    public LogRegFrame creationLoginFrame(){\n        LogRegFrame lf = new LogRegFrame();\n        this.loginFrame = lf;\n        return lf;\n    }\n    public LogRegFrame creationRegistrationFrame(){\n        LogRegFrame rf = new LogRegFrame();\n        this.registrationFrame = rf;\n        return rf;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/GUIClassesSwing/GUIManager.java b/src/GUIClassesSwing/GUIManager.java
--- a/src/GUIClassesSwing/GUIManager.java	(revision db66ef196f2c18f3bb93f9a52c43ba92fdbc22a7)
+++ b/src/GUIClassesSwing/GUIManager.java	(date 1702581663952)
@@ -64,9 +64,9 @@
             case 3: JOptionPane.showMessageDialog(null,"That email is not valid");
                 break;
             case 4: JOptionPane.showMessageDialog(null, "The username does not have the size requirements (MIN:3 MAX 10)");
-            break;
+                break;
             case 5: JOptionPane.showMessageDialog(null, "The pin is not valid (MIN:4 MAX:8)");
-            break;
+                break;
         }
 
     }
Index: src/GUIClassesSwing/MusicCreatorGUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package src.GUIClassesSwing;\n\nimport src.RockStar.User;\n\nimport javax.swing.*;\n\npublic class MusicCreatorGUI extends JFrame {\n    private User currentUsername;\n    public MusicCreatorGUI(User currentUser){\n        super(\"Music Creator - \" + currentUser.getUsername());\n        this.currentUsername = currentUser;\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\n        setSize(1000,1000);\n        setLocationRelativeTo(null);\n        setVisible(true);\n        ImageIcon imageIcon = new ImageIcon(\"images/headphone.png\");\n        setIconImage(imageIcon.getImage());\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/GUIClassesSwing/MusicCreatorGUI.java b/src/GUIClassesSwing/MusicCreatorGUI.java
--- a/src/GUIClassesSwing/MusicCreatorGUI.java	(revision db66ef196f2c18f3bb93f9a52c43ba92fdbc22a7)
+++ b/src/GUIClassesSwing/MusicCreatorGUI.java	(date 1702581663963)
@@ -3,17 +3,34 @@
 import src.RockStar.User;
 
 import javax.swing.*;
+import java.awt.*;
 
 public class MusicCreatorGUI extends JFrame {
     private User currentUsername;
     public MusicCreatorGUI(User currentUser){
         super("Music Creator - " + currentUser.getUsername());
         this.currentUsername = currentUser;
+        initComponents();
         setDefaultCloseOperation(EXIT_ON_CLOSE);
         setSize(1000,1000);
         setLocationRelativeTo(null);
         setVisible(true);
         ImageIcon imageIcon = new ImageIcon("images/headphone.png");
         setIconImage(imageIcon.getImage());
+        setMinimumSize(new Dimension(900, 700));
     }
+    public void initComponents() {
+        Container mainContainer = new Container();
+        mainContainer.setLayout(new BorderLayout());
+
+
+        //painel west
+        //label albuns
+        JLabel albumLabel = new JLabel();
+        albumLabel.setText("Albums");
+    }
+    //criacao da liast
+
+
+
 }
